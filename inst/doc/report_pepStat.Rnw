%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{pepStat report example}
%\VignetteDepends{PEP.db, knitr, HIV.db, Pviz}
%\VignetteKeywords{Preprocessing, Affymetrix}
%\VignettePackage{pepStat}
\documentclass[11pt]{article}
\usepackage{hyperref}
\usepackage{url}
\usepackage{fullpage}
\usepackage{graphicx}

<<include=FALSE>>=
opts_chunk$set(tidy=TRUE)
@


\begin{document}
\title{Using pre-genereated report for the analysis of peptide microarray data}
\author{Renan Sauteraud\footnote{rsautera@fhcrc.org}}
\maketitle

\tableofcontents

\newpage

\section{Introduction}
This vignette presents how to generate and use an automated report to easily analyse peptide microarray data.
Reports aim at making the analysis accessible and reproducible. However, this set of function does not replace the use of all packages involved, in an interactive session.
The \hyperlink{Settings}{options} available for the customization of the analysis are a subset of what these packages can do. For a more customized analysis and a detailed description of the options offered by these packages, please refer to the other vignettes and the man pages.  
\\

As with any other R package, \texttt{pepStat} has to be loaded first in order to use the report creation functions.
<<libraries, message=FALSE>>=
library(pepStat)
@

\section{Creating a new project}
The following instruction creates new folder `project' in the current path. The directory will contain all the required subfolders as well as the first report and a configuration file.
<<mk-project>>=
mk_project(path="./", project_name="project", report_name="report1")
@

\section{Importing data}
The `data' directory contains two subfolders `input' and `output'. All the .gpr files as well as the mapping file should be copied into the `input' folder.

All the files in this folder will be used by the functions in the reports. If two reports use different sets of data (even a subset of the other), a new project must be created.

\texttt{pepStat}'s user guide describe the required input in details in the \textbf{Generating a peptideSet} section. 

\section{Running the analysis}
The report itself is the document that contains the R code used for the analysis. It is an \htmladdnormallink{R markdown}{http://www.rstudio.com/ide/docs/r\_markdown} document located in the `reports' folder.  


\texttt{pepStat} makes use of the\htmladdnormallink{\texttt{knitr}}{http://cran.r-project.org/web/packages/knitr/index.html} package to read and execute the report file.


The chunk of code below	executes the report `report1' if it exists in the project.
<<run-report, eval=FALSE>>=
run_report(path="./", project_name="project", report_name="report1")
@
\texttt{run\_report} is essentially a wrapper around \texttt{knitr}'s \texttt{knit2pdf} function. A single project can have multiple reports and each report can have a different set of options. However, all the reports will use the same data file.

\section{Retrieving the results}
All results are placed in the `data/output/' folder. The output of the report can be found here as well as anything that gets written on disk during the execution of the report, such as \texttt{peptidSet}s saved as csv files or extra figures.


\hypertarget{Settings}{}
\section{Settings}
There are a few options related to the analysis that can be modified by the user. Each report has an associated configuration file located in the `settings' subfolder of the project. The options are described using the \htmladdnormallink{yaml}{http://yaml.org/} format.

\subsection{pepStat options}
Here we list the options available for the functions related to \texttt{pepStat}.
\begin{itemize}
\item mapping: mapping.csv\\
Changing this filename changes the mapping file associated with the report. The file should be a valid csv file located in the the `data/input/' folder.
\item collection: pep\_hxb2\\
This is the peptide collection used to get the coordinates of the peptides on the array. It should be one of the valid datasets of the \texttt{PEP.db} package.
\item call.cutoff: 0.1\\
The cutoff used in the \texttt{makeCalls} function.
\end{itemize}

\subsection{HIV.db options}
The following options are available for customizing the annotations associated with the analysis.
\begin{itemize}
\item genome: hxb2
The reference genome for the annotations. Available: hxb2, mac239.
\item features:\\
  - V1\\
  - V2\\
  - TM\\
  - ...\\
The list of features that should be annotated in the figures. Add elements on new lines to add more features. The features should be available in \texttt{HIV.db} for the selected genome. To get a list of available features for the selected genome, refer to \texttt{HIV.db} vignette and \texttt{?HIV.db::getFeature}.
\end{itemize}

In order to draw custom plots, or use more advanced options, use the packages in an interactive session.

\section{Removing a project}
A project can be removed manually by removing the top level folder. For convenience and safety purpose, \texttt{pepStat} also offer a function to delete the project from R.

<<rm-report>>=
rm_project(path="./", project_name="project")
@
This function make some checks and removes the main folder if it is indeed a project or send an error message if it is not.

\section{Session info}
<<session, eval=TRUE>>=
sessionInfo()
@

\end{document}
